../testcases/aaa-nil.tig:
NilExp
../testcases/aa-test01.tig:
IntExp(1)
../testcases/aa-test02.tig:
StringExp(""hello"")
../testcases/aa-test03.tig:
NilExp
../testcases/aa-test04.tig:
NilExp
../testcases/aa-test05.tig:
IfExp(
 NilExp,
 StringExp(""yep""),
 StringExp(""nah""))
../testcases/aa-test06.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/aa-test07.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/aa-test08.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/aa-test09.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/aa-test10.tig:
VarExp(
 SubscriptVar(
  SimpleVar(a),
  IntExp(0)))
../testcases/aa-test11.tig:
AssignExp(
 SubscriptVar(
  SimpleVar(a),
  IntExp(0)),
 StringExp(""hello""))
../testcases/aa-test12.tig:
NilExp
../testcases/merge.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/queens.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test01.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test02.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test03.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test04.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test05.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test06.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test07.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test08.tig:
IfExp(
 NilExp,
 IntExp(30),
 IntExp(40))
../testcases/test09.tig:
IfExp(
 NilExp,
 IntExp(13),
 StringExp("" ""))
../testcases/test10.tig:
WhileExp(
 NilExp,
 NilExp)
../testcases/test11.tig:
ForExp(
i,true,
 IntExp(10),
 StringExp("" ""),
 AssignExp(
  SimpleVar(i),
  NilExp))
../testcases/test12.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test13.tig:
NilExp
../testcases/test14.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test15.tig:
IfExp(
 IntExp(20),
 IntExp(3))
../testcases/test16.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test17.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test18.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test19.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test20.tig:
WhileExp(
 NilExp,
 NilExp)
../testcases/test21.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test22.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test23.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test24.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test25.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test26.tig:
NilExp
../testcases/test27.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test28.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test29.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test30.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test31.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test32.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test33.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test34.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test35.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test36.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test37.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test38.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test39.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test40.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test41.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test42.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test43.tig:
LetExp([
 FunctionDec[]],
 NilExp)
../testcases/test44.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test45.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test46.tig:
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test47.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test48.tig:
LetExp([
 FunctionDec[],
 FunctionDec[],
 FunctionDec[]],
 NilExp)
../testcases/test49.tig:
../testcases/test49.tig:5.18:syntax error: inserting  PLUS
LetExp([
 FunctionDec[],
 FunctionDec[]],
 NilExp)
